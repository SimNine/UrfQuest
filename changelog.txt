0.1.0 - 2/2/16
-Created something of a 2D rendering system
--Renders a grid which is randomly generated of three different types of tiles: dirt, grass, rock
--Always renders with the GameCenter in the center of the screen
--Window is resizable, so that only the blocks that would fit on the screen at any time are rendered.
-Four different types of coordinates:
--GameCenter: the exact position (a decimal double) of the cursor
--GameCenterBlock: the block that the cursor is currently on
--DisplayCenter: the center of the QuestPanel relative to top-left (in terms of pixels)
--DisplayBlockDimensions: the dimensions of the QuestPanel (in terms of tiles)
-A timer goes off every 5ms:
--Redraws the panel based on the current coordinates and dimensions
--Checks what arrow keys are pressed down, moving the cursor appropriately
-Whenever an arrow key is pressed, it is added to an array of keys. Whenever released, it is removed.
-Status panel in upper-left corner displays all four coordinates

0.2.0 - 2/5/16
-Split up the game's logic and its display into separate components (questPanel --> questGame + questPanel)
-Split the GamePanel rendering into several different methods:
--drawBoard(g)
--drawStatus(g)
--drawCursor(g)
-Optimized drawBoard(g) to use temporary variables instead of reiterating through computations for each tile
-Removed the black edges from each tile
-The cursor can no longer enter stone or null tiles
-The movement-per-tick of the cursor is now constrained to a variable "speed" in questGame
-Movement of the curson in each direction is now constrained to a method "attemptMove()"

0.3.0 - 2/8/16
-Created procedurally generated "character" sprite (placeholder) that looks like an arrow
-Created a new class "StatusBar", customizable with color, max value, and of course, scale
-Added two StatusBars, one for "mana" and one for "health"
-Added four new blocks, one which increases speed, one which increases mana, one that increases health, one that drains all three
-Added a new method in QuestGame to react to the block the player is currently on

0.4.0 - 2/10/16
-Completely restructured the game using a new game design pattern; all global variables are public static
-Added an Entity class, designed to represent other creatures (and potentially the player too)
-The game and the display are now sent separate ticks; the game is sent a tick first
-Entites' logic and drawing are iterated through by putting them into an ArrayList
-Entities are now generated by QuestMap's constructor
-The framework for making different types of entities is now in place
-Entities' logic is now a rudimentary 2D physics simulation
-Entity's constructor now allows for its position, size, and color

0.4.1 - 8/9/16
-Removed the need for a "player tile position" global variable
-Level loader no longer saves player facings
-Replaced integer-based directional facings with string-based
-Separated entities' physics getters and setters into pos, vel, and acc

0.4.2 - 8/10/16
-Made the player a subclass of entity
-Deglobalized all player-related variables; they are now accessed through the player entity
-Fixed debugging graphics appearing even when V.debug was false
NOTE: MapLoader is completely fucked

0.5.0 - 8/16/16
-Completely replaced hardcoded "player" with player entity
-Player no longer converts grass to dirt
-Replaced all tile and entity procedurally drawn graphics with .png images
-New bug? game now lags considerably (might be due to running on battery power)

0.6.0 - 11/22/16
-Again, major restructuring of the game: all global variables are now accessed through the main class
-Added support for multiple maps per game
-Added new Tree tile
-Began adding a rudimentary sound engine
-Consolidated rendering of tiles and tile properties into Tiles class, using boolean "properties" array
-Put all assets (pictures, sounds) into new "assets" folder and updated paths accordingly
-MapLoader is still fucked, so are the Shape, Ball, and Square entity classes

0.7.0 - 11/22/16
-Imported menu GUI from Arcanists Clone 0.1.0 project
-Enabled pause menu and main menu
-Added unwalkable water tile
-Added new map generation method using simplex noise; simplex noise generator taken from: 
	http://staffwww.itn.liu.se/~stegu/simplexnoise/simplexnoise.pdf
	This method has been modified to provide a different result every time by permuting the "perm[]" array
-Player is now placed in an automatically generated open area with no trees
-Gameplay GUI (status bars, etc) is hidden while in menus
	
0.7.1 - 11/22/16
-Player's graphics are now initialized the same way as tiles and sounds
-All graphics are now imported using an input stream sourced at the main class,
	allowing importing to work properly when in runnable jar form
-The running instance of the main class is now accessible at UrfQuest.quest